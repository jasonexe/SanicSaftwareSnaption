buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.22.1'
    }
}

apply plugin: 'com.android.application'
//apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId 'com.snaptiongame.snaption'
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 10
        versionName "0.8.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            debuggable true
        }
    }
    signingConfigs {
        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    productFlavors {
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

ext.androidVersion = '25.3.1'
ext.firebaseLibVersion = '9.8.0'
ext.firebaseStorageVersion = '10.2.1'
ext.firebasePerformanceVersion = '10.2.6'
ext.firebaseUILibVersion = '0.6.0'
ext.powerMock = '1.6.5'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$androidVersion"
    compile "com.android.support:design:$androidVersion"
    compile "com.android.support:cardview-v7:$androidVersion"
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    //Firebase libraries
    compile "com.google.firebase:firebase-core:$firebaseLibVersion"
    compile "com.google.firebase:firebase-database:$firebaseLibVersion"
    compile "com.google.firebase:firebase-auth:$firebaseLibVersion"
    compile "com.google.firebase:firebase-messaging:$firebaseLibVersion"
    compile "com.google.firebase:firebase-invites:$firebaseLibVersion"
    compile "com.google.firebase:firebase-crash:$firebaseLibVersion"
    //compile "com.google.firebase:firebase-perf:$firebasePerformanceVersion"
    compile "com.google.firebase:firebase-storage:$firebaseLibVersion"
    compile "com.firebaseui:firebase-ui-storage:$firebaseUILibVersion"

    compile "com.google.android.gms:play-services-auth:$firebaseLibVersion"
    // Butterknife - view binding
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    // Glide - image retrieval and caching
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'commons-io:commons-io:2.4'
    // JUnit - unit testing
    testCompile 'junit:junit:4.12'
    // Mockito - mocking objects
    // Mockito 1 is needed because Robolectric doesn't fully support Mockito 2
    testCompile 'org.mockito:mockito-core:1.+'
    // Robolectric - accessing Android resources without emulator
    testCompile 'org.robolectric:robolectric:3.0'
    // PowerMock - mocking static methods
    testCompile "org.powermock:powermock-module-junit4:$powerMock"
    testCompile "org.powermock:powermock-module-junit4-rule:$powerMock"
    testCompile "org.powermock:powermock-api-mockito:$powerMock"
    testCompile "org.powermock:powermock-classloading-xstream:$powerMock"
    // Retrofit - POST requests to firebase for deep links
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    // PhotoView - Image Zoom Library
    compile 'com.github.chrisbanes:PhotoView:2.0.0'
    // PercentRelativeView for percentage based layouts
    compile 'com.android.support:percent:25.3.1'
    // For creating circular images
    compile 'de.hdodenhof:circleimageview:2.1.0'
    // For loading drawables efficiently
    compile 'com.squareup.picasso:picasso:2.5.2'
    // For adding crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
}

apply plugin: 'com.google.gms.google-services'
